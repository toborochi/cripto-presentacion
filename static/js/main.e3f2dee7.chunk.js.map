{"version":3,"sources":["Transpo.js","Susti.js","App.js","reportWebVitals.js","index.js"],"names":["cipher_type","TranspositionCipher","this","text","permutation","type","table","matrix","p","t","k","console","log","tabla","cifrado","texto","cols","Math","ceil","length","i","j","it","a","concat","push","temp","aux","original","trunc","SustitutionCipher","abc","abc_up","str","amount","caesarShift","output","c","match","code","charCodeAt","String","fromCharCode","TabPanel","props","children","value","index","other","role","hidden","id","aria-labelledby","Box","useStyles","makeStyles","theme","root","margin","spacing","Table","map","item","val","ind","style","border","width","height","React","Component","App","classes","useState","setValue","setTabla","setTexto","llave","setLlave","textoEnc","setTextoEnc","checked","setChecked","textoCesar","setTextoCesar","textoEncCesar","setTextoEncCesar","llaveCesar","setLlaveCesar","open","setOpen","className","AppBar","position","Toolbar","variant","Tabs","onChange","event","newValue","Tab","label","Button","color","borderRadius","onClick","Typography","TextField","target","display","justifyContent","alignItems","Checkbox","setType","cipherText","Number","d","decrypyText","s","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4XAAaA,EACA,EADAA,EAEH,EAGWC,E,WAIjB,aAAe,oBACXC,KAAKC,KAAO,GACZD,KAAKE,YAAc,GACnBF,KAAKG,KAAOL,EACZE,KAAKI,MAAQ,GACbJ,KAAKK,OAAS,CAAC,I,2CAGnB,SAAQC,GACJN,KAAKC,KAAOK,I,wBAGhB,SAAWC,EAAGC,GAEVC,QAAQC,IAAI,YAAYH,GAExB,IAAII,EAAQ,GACZX,KAAKI,MAAQ,GAOb,IANA,IAAIQ,EAAU,GACVC,EAAQN,EAGRO,EAAOC,KAAKC,KAAMH,EAAMI,OAAST,GAE5BU,EAAI,EAAGA,EAAIV,IAAKU,EAAG,CAIxB,IAHA,IAAIC,EAAID,EACJE,EAAK,EACLC,EAAI,GACDD,EAAKN,GACJK,GAAKN,EAAMI,OACXL,EAAUA,EAAQU,OAAO,KAEzBV,GAAWC,EAAMM,GAErBE,EAAEE,KAAKX,EAAQA,EAAQK,OAAS,IAChCE,GAAKX,EACLY,IAEJT,EAAMY,KAAKF,GAQf,GAJArB,KAAKK,OAAOM,EAEZF,QAAQC,IAAI,SAASV,KAAKG,MAEtBH,KAAKG,OAASL,EAAoB,CAClC,IAAI0B,EAAO,GACX,IAASN,EAAI,EAAGA,EAAIJ,IAAQI,EAAG,CAC3B,IAAIO,EAAM,GACV,IAASN,EAAI,EAAGA,EAAIX,IAAKW,EACrBM,EAAIF,KAAKZ,EAAMQ,GAAGD,IAEtBM,EAAKD,KAAKE,GAEdzB,KAAKK,OAAOmB,EAKhB,OADAf,QAAQC,IAAI,WAAWE,GAChBA,I,qBAGX,SAAQL,GAIAP,KAAKG,KAHLI,EAGUT,EAFAA,I,yBAMlB,SAAYS,EAAGC,GACX,IAAIkB,EAAW,GACXb,EAAQN,EAERO,EAAOC,KAAKY,MAAOd,EAAMI,OAAST,GACtCC,QAAQC,IAAII,GACZ,IAAK,IAAII,EAAI,EAAGA,EAAIJ,IAAQI,EAAG,CAC3B,IAAIC,EAAID,EACJE,EAAK,EAET,IADAX,QAAQC,IAAI,OACLU,EAAKZ,GAEJW,EAAIN,EAAMI,SACVR,QAAQC,IAAIG,EAAMM,IAClBO,GAAYb,EAAMM,IAKtBA,GAAKL,EAELM,IAMR,OAAOM,I,6BAGX,SAAgBpB,GACZN,KAAKE,YAAcI,M,KC/GNsB,E,WAEjB,aAAe,oBACX5B,KAAK6B,IAAM,6BACX7B,KAAK8B,OAAS,6B,+CAIlB,SAAYC,EAAKC,GAGb,GAAIA,EAAS,EACT,OAAOhC,KAAKiC,YAAYF,EAAKC,EAAS,IAK1C,IAFA,IAAIE,EAAS,GAEJhB,EAAI,EAAGA,EAAIa,EAAId,OAAQC,IAAK,CACjC,IAAIiB,EAAIJ,EAAIb,GAGZ,GAAIiB,EAAEC,MAAM,UAAW,CAEnB,IAAIC,EAAON,EAAIO,WAAWpB,GAGtBmB,GAAQ,IAAMA,GAAQ,GACtBF,EAAII,OAAOC,cAAeH,EAAO,GAAKL,GAAU,GAAM,IAIjDK,GAAQ,IAAMA,GAAQ,MAC3BF,EAAII,OAAOC,cAAeH,EAAO,GAAKL,GAAU,GAAM,KAK9DE,GAAUC,EAId,OAAOD,M,YChCf,SAASO,EAASC,GAAQ,IAEhBC,EAAqCD,EAArCC,SAAUC,EAA2BF,EAA3BE,MAAOC,EAAoBH,EAApBG,MAAUC,EAFZ,YAEsBJ,EAFtB,8BAIvB,OACE,6CACEK,KAAK,WACLC,OAAQJ,IAAUC,EAClBI,GAAE,0BAAqBJ,GACvBK,kBAAA,qBAA+BL,IAC3BC,GALN,aAOGF,IAAUC,GACT,cAACM,EAAA,EAAD,CAAK7C,EAAG,EAAR,SACGqC,OAaX,IAAMS,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPC,OAAQF,EAAMG,QAAQ,SAMtBC,E,4JAEJ,WACE,OACE,gCACE,gCACG1D,KAAK0C,MAAM/B,MAAMgD,KAAI,SAACC,EAAMf,GAC3B,OACE,6BAEIe,EAAKD,KAAI,SAACE,EAAKC,GACb,OACE,oBAAIC,MAAO,CAAEC,OAAQ,kBAAmBC,MAAO,OAAQC,OAAQ,QAA/D,SAA+FL,GAA/F,UAAiFA,GAAjF,OAAuFC,QAJtFjB,c,GARHsB,IAAMC,WAoMXC,MA3Kf,WAEE,IAAMC,EAAUlB,IAFH,EAGamB,mBAAS,GAHtB,mBAGN3B,EAHM,KAGC4B,EAHD,OAIaD,mBAAS,CAAC,KAJvB,mBAIN5D,EAJM,KAIC8D,EAJD,OAKaF,mBAAS,IALtB,mBAKN1D,EALM,KAKC6D,EALD,OAMaH,mBAAS,GANtB,mBAMNI,EANM,KAMCC,EAND,OAOmBL,mBAAS,IAP5B,mBAONM,EAPM,KAOIC,EAPJ,OAQiBP,oBAAS,GAR1B,mBAQNQ,EARM,KAQGC,EARH,OAUuBT,mBAAS,IAVhC,mBAUNU,EAVM,KAUMC,EAVN,OAW6BX,mBAAS,IAXtC,mBAWNY,EAXM,KAWSC,EAXT,QAYuBb,mBAAS,GAZhC,qBAYNc,GAZM,MAYMC,GAZN,SAcWnB,IAAMI,UAAS,GAd1B,qBAcNgB,GAdM,MAcAC,GAdA,MAwBPjF,GAAI,IAAIR,EACRoC,GAAI,IAAIP,EAQd,OACE,sBAAK6D,UAAU,MAAf,UACE,eAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,UACE,cAACC,EAAA,EAAD,CAASC,QAAQ,QAAjB,mCAGA,eAACC,EAAA,EAAD,CAAMlD,MAAOA,EAAOmD,SAZL,SAACC,EAAOC,GAC3BzB,EAASyB,IAWL,UACE,cAACC,EAAA,EAAD,CAAKC,MAAM,qBACX,cAACD,EAAA,EAAD,CAAKC,MAAM,mBACX,cAACC,EAAA,EAAD,CAAQP,QAAQ,YAAY9B,MAAO,CAAEsC,MAAO,QAAQC,aAAc,KAAOD,MAAO,YAAaE,QA1B7E,WACtBf,IAAQ,IAyBF,+BAGJ,eAAC/C,EAAD,CAAUG,MAAOA,EAAOC,MAAO,EAA/B,UACE,cAAC2D,EAAA,EAAD,CAAYX,QAAQ,KAApB,4BACA,uBAAMJ,UAAWnB,EAAQf,KAAzB,UACE,8BACE,cAACkD,EAAA,EAAD,CAAWxD,GAAG,iBACZkD,MAAM,cACNN,QAAQ,WACRjD,MAAO/B,EACPkF,SAAU,SAAAC,GAAK,OAAItB,EAASsB,EAAMU,OAAO9D,YAE7C,8BACE,cAAC6D,EAAA,EAAD,CAAWxD,GAAG,iBACZkD,MAAM,sBACNN,QAAQ,WACRjD,MAAO+B,EACPoB,SAAU,SAAAC,GAAK,OAAIpB,EAASoB,EAAMU,OAAO9D,eAI/C,cAAC4D,EAAA,EAAD,CAAYX,QAAQ,KAApB,mBACA,qBAAK9B,MAAO,CAAE4C,QAAS,OAAQC,eAAgB,SAAUC,WAAY,UAArE,SACE,cAAC,EAAD,CACElG,MAAOA,MAGX,2CAEE,cAACmG,EAAA,EAAD,CACE/B,QAASA,EACTgB,SAAU,SAACC,GACThB,EAAWgB,EAAMU,OAAO3B,eAI9B,sBAAKU,UAAWnB,EAAQf,KAAxB,UACE,cAAC6C,EAAA,EAAD,CAAQP,QAAQ,YACdQ,MAAM,UACNE,QAAS,WACPhG,GAAEwG,QAAQhC,GACV,IAAI5C,EAAI5B,GAAEyG,WAAWnG,EAAOoG,OAAOtC,IACnClE,QAAQC,IAAIH,GAAEF,QACdoE,EAASlE,GAAEF,QACXyE,EAAY3C,IAPhB,oBAUA,cAACiE,EAAA,EAAD,CAAQP,QAAQ,YACdQ,MAAM,YACNE,QAAS,WACP,IAAIW,EAAI3G,GAAE4G,YAAYtC,EAAUoC,OAAOtC,IACvCD,EAASwC,IAJb,0BAQF,cAACT,EAAA,EAAD,CAAWxD,GAAG,iBACZkD,MAAM,gBACNN,QAAQ,WACRjD,MAAOiC,EACPkB,SAAU,SAAAC,GAAK,OAAIlB,EAAYkB,EAAMU,OAAO9D,aAGhD,eAACH,EAAD,CAAUG,MAAOA,EAAOC,MAAO,EAA/B,UACE,cAAC2D,EAAA,EAAD,CAAYX,QAAQ,KAApB,iCACA,uBAAMJ,UAAWnB,EAAQf,KAAzB,UACE,8BACE,cAACkD,EAAA,EAAD,CAAWxD,GAAG,iBACZkD,MAAM,cACNN,QAAQ,WACRjD,MAAOqC,EACPc,SAAU,SAAAC,GAAK,OAAId,EAAcc,EAAMU,OAAO9D,YAElD,8BACE,cAAC6D,EAAA,EAAD,CAAWxD,GAAG,iBACZkD,MAAM,sBACNN,QAAQ,WACRjD,MAAOyC,GACPU,SAAU,SAAAC,GAAK,OAAIV,GAAcU,EAAMU,OAAO9D,eAIpD,sBAAK6C,UAAWnB,EAAQf,KAAxB,UACE,cAAC6C,EAAA,EAAD,CAAQP,QAAQ,YACdQ,MAAM,UACNzD,MAAOqC,EACPsB,QAAS,WACP,IAAIa,EAAIH,OAAO5B,IACfD,EAAiBjD,GAAEF,YAAYgD,EAAYmC,KAL/C,oBAQA,cAAChB,EAAA,EAAD,CAAQP,QAAQ,YACdQ,MAAM,YACNzD,MAAOuC,EACPoB,QAAS,WACP,IAAIa,EAAIH,OAAO5B,IACfH,EAAc/C,GAAEF,YAAYkD,GAAoB,EAALiC,KAL/C,0BASF,cAACX,EAAA,EAAD,CAAWxD,GAAG,iBACZkD,MAAM,gBACNN,QAAQ,WACRjD,MAAOuC,EACPY,SAAU,SAAAC,GAAK,OAAIZ,EAAiBY,EAAMU,OAAO9D,aAGrD,eAACyE,EAAA,EAAD,CACE9B,KAAMA,GACN+B,QAnIc,WAClB9B,IAAQ,IAgIN,UAIE,cAAC+B,EAAA,EAAD,UAAc,gBACd,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAmBxE,GAAG,2BAAtB,SACA,+BACE,wEACA,0DACA,4DACA,0DACA,iFC3NGyE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e3f2dee7.chunk.js","sourcesContent":["export const cipher_type = {\r\n    COLUMNA: 1,\r\n    FILA: 0\r\n};\r\n\r\nexport default class TranspositionCipher {\r\n\r\n\r\n\r\n    constructor() {\r\n        this.text = \"\";\r\n        this.permutation = [];\r\n        this.type = cipher_type.FILA;\r\n        this.table = \"\";\r\n        this.matrix = [[]];\r\n    }\r\n\r\n    setText(p) {\r\n        this.text = p;\r\n    }\r\n\r\n    cipherText(t, k) {\r\n\r\n        console.log('ORIGINAL ',t);\r\n        \r\n        var tabla = [];\r\n        this.table = \"\";\r\n        var cifrado = \"\";\r\n        var texto = t;\r\n        //texto = texto.replace(/\\s/g, '');\r\n\r\n        var cols = Math.ceil((texto.length / k));\r\n\r\n        for (var i = 0; i < k; ++i) {\r\n            var j = i;\r\n            var it = 0;\r\n            var a = [];\r\n            while (it < cols) {\r\n                if (j >= texto.length) {\r\n                    cifrado = cifrado.concat(\"X\");\r\n                } else {\r\n                    cifrado += texto[j];\r\n                }\r\n                a.push(cifrado[cifrado.length - 1]);\r\n                j += k;\r\n                it++;\r\n            }\r\n            tabla.push(a);\r\n        }\r\n\r\n\r\n        this.matrix=tabla;\r\n\r\n        console.log('TIPO: ',this.type);\r\n\r\n        if (this.type === cipher_type.COLUMNA){\r\n            var temp = [];\r\n            for (var i = 0; i < cols; ++i) {\r\n                var aux = [];\r\n                for (var j = 0; j < k; ++j) {\r\n                    aux.push(tabla[j][i]);\r\n                }\r\n                temp.push(aux);\r\n            }\r\n            this.matrix=temp;\r\n        }\r\n\r\n        //console.log(this.matrix);\r\n        console.log('CIFRADO ',cifrado);\r\n        return cifrado;\r\n    }\r\n\r\n    setType(t){\r\n        if(!t){\r\n            this.type=cipher_type.FILA;\r\n        }else{\r\n            this.type=cipher_type.COLUMNA;\r\n        }\r\n    }\r\n\r\n    decrypyText(t, k) {\r\n        var original = \"\";\r\n        var texto = t;\r\n\r\n        var cols = Math.trunc((texto.length / k));\r\n        console.log(cols);\r\n        for (var i = 0; i < cols; ++i) {\r\n            var j = i;\r\n            var it = 0;\r\n            console.log(\"---\");\r\n            while (it < k) {\r\n\r\n                if (j < texto.length) {\r\n                    console.log(texto[j]);\r\n                    original += texto[j];\r\n                }\r\n\r\n\r\n\r\n                j += cols;\r\n\r\n                it++;\r\n            }\r\n        }\r\n\r\n\r\n\r\n        return original;\r\n    }\r\n\r\n    setKeyfromArray(p) {\r\n        this.permutation = p;\r\n    }\r\n\r\n\r\n}","export default class SustitutionCipher {\r\n\r\n    constructor() {\r\n        this.abc = \"abcdefghijklmnopqrstuvwxyz\";\r\n        this.abc_up = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n    }\r\n\r\n\r\n    caesarShift(str, amount) {\r\n        \r\n        // Descifrar\r\n        if (amount < 0) {\r\n            return this.caesarShift(str, amount + 26);\r\n        }\r\n\r\n        var output = \"\";\r\n\r\n        for (var i = 0; i < str.length; i++) {\r\n            var c = str[i];\r\n\r\n            // Es letra\r\n            if (c.match(/[a-z]/i)) {\r\n                // Codigo del caracter\r\n                var code = str.charCodeAt(i);\r\n\r\n                // Mayusc\r\n                if (code >= 65 && code <= 90) {\r\n                    c = String.fromCharCode(((code - 65 + amount) % 26) + 65);\r\n                }\r\n\r\n                // Minusc\r\n                else if (code >= 97 && code <= 122) {\r\n                    c = String.fromCharCode(((code - 97 + amount) % 26) + 97);\r\n                }\r\n            }\r\n\r\n            \r\n            output += c;\r\n        }\r\n\r\n        \r\n        return output;\r\n    };\r\n}","import './App.css';\nimport { AppBar, Toolbar, Tabs, Tab, Box, TextField, Button, Checkbox, Typography, Dialog, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles'\nimport TranspositionCipher from './Transpo';\nimport React, { Component } from 'react';\nimport SustitutionCipher from './Susti';\n\nfunction TabPanel(props) {\n\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\n\nclass Table extends React.Component {\n\n  render() {\n    return (\n      <table>\n        <tbody>\n          {this.props.tabla.map((item, index) => {\n            return (\n              <tr key={index}>\n                {\n                  item.map((val, ind) => {\n                    return (\n                      <td style={{ border: '1px solid black', width: '20px', height: '20px' }} key={`${val}${ind}`}>{val}</td>\n                    );\n                  })\n                }\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nfunction App() {\n\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [tabla, setTabla] = useState([[]]);\n  const [texto, setTexto] = useState(\"\");\n  const [llave, setLlave] = useState(1);\n  const [textoEnc, setTextoEnc] = useState(\"\");\n  const [checked, setChecked] = useState(false);\n\n  const [textoCesar, setTextoCesar] = useState(\"\");\n  const [textoEncCesar, setTextoEncCesar] = useState(\"\");\n  const [llaveCesar, setLlaveCesar] = useState(1);\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const t = new TranspositionCipher();\n  const c = new SustitutionCipher();\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n\n\n  return (\n    <div className=\"App\">\n      <AppBar position=\"static\">\n        <Toolbar variant=\"dense\">\n          Criptografia (ELC107)\n        </Toolbar>\n        <Tabs value={value} onChange={handleChange}>\n          <Tab label=\"Transposición\" />\n          <Tab label=\"Sustitución\" />\n          <Button variant=\"contained\" style={{ color: 'white',borderRadius: \"0\" }} color={\"secondary\"} onClick={handleClickOpen} >INTEGRANTES</Button>\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <Typography variant=\"h4\">Fila y Columna</Typography>\n        <form className={classes.root}>\n          <div>\n            <TextField id=\"outlined-basic\"\n              label=\"Texto Plano\"\n              variant=\"outlined\"\n              value={texto}\n              onChange={event => setTexto(event.target.value)} />\n          </div>\n          <div>\n            <TextField id=\"outlined-basic\"\n              label=\"Llave de Encriptado\"\n              variant=\"outlined\"\n              value={llave}\n              onChange={event => setLlave(event.target.value)} />\n          </div>\n\n        </form>\n        <Typography variant=\"h5\">Tabla</Typography>\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n          <Table\n            tabla={tabla}\n          />\n        </div>\n        <div>\n          Columnar\n          <Checkbox\n            checked={checked}\n            onChange={(event) => {\n              setChecked(event.target.checked)\n            }}\n          />\n        </div>\n        <div className={classes.root}>\n          <Button variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              t.setType(checked);\n              let c = t.cipherText(texto, Number(llave));\n              console.log(t.matrix);\n              setTabla(t.matrix);\n              setTextoEnc(c);\n            }}\n          >Cifrar</Button>\n          <Button variant=\"contained\"\n            color=\"secondary\"\n            onClick={() => {\n              let d = t.decrypyText(textoEnc, Number(llave));\n              setTexto(d);\n            }}\n          >Descifrar</Button>\n        </div>\n        <TextField id=\"outlined-basic\"\n          label=\"Texto Cifrado\"\n          variant=\"outlined\"\n          value={textoEnc}\n          onChange={event => setTextoEnc(event.target.value)}\n        />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Typography variant=\"h4\">Cifrado de César</Typography>\n        <form className={classes.root}>\n          <div>\n            <TextField id=\"outlined-basic\"\n              label=\"Texto Plano\"\n              variant=\"outlined\"\n              value={textoCesar}\n              onChange={event => setTextoCesar(event.target.value)} />\n          </div>\n          <div>\n            <TextField id=\"outlined-basic\"\n              label=\"Llave de Encriptado\"\n              variant=\"outlined\"\n              value={llaveCesar}\n              onChange={event => setLlaveCesar(event.target.value)} />\n          </div>\n\n        </form>\n        <div className={classes.root}>\n          <Button variant=\"contained\"\n            color=\"primary\"\n            value={textoCesar}\n            onClick={() => {\n              var s = Number(llaveCesar);\n              setTextoEncCesar(c.caesarShift(textoCesar, s));\n            }}\n          >Cifrar</Button>\n          <Button variant=\"contained\"\n            color=\"secondary\"\n            value={textoEncCesar}\n            onClick={() => {\n              var s = Number(llaveCesar);\n              setTextoCesar(c.caesarShift(textoEncCesar, s * -1));\n            }}\n          >Descifrar</Button>\n        </div>\n        <TextField id=\"outlined-basic\"\n          label=\"Texto Cifrado\"\n          variant=\"outlined\"\n          value={textoEncCesar}\n          onChange={event => setTextoEncCesar(event.target.value)} />\n      </TabPanel>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n      >\n        <DialogTitle>{\"Integrantes\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n          <ul>\n            <li>Añez Vladimirovna, Leonardo Henry  </li>\n            <li>Heredia Claros, Stephani</li>\n            <li>Lemus Miranda, Josue Marco</li>\n            <li>Mollinedo Franco, Milena</li>\n            <li>Sarabia Ramirez, Javier Alejandro</li>\n            </ul>\n          </DialogContentText>\n        </DialogContent>\n      </Dialog>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}